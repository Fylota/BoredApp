openapi: 3.0.3
info:
  title: BoredApp
  description: |-
  
    This is the API definition of BoredApp Android mobile application.

  contact:
    email: fulop.agota@edu.bme.hu
  version: 1.0.0
externalDocs:
  description: Github repository
  url: https://github.com/Fylota/BoredApp
tags:
  - name: Activity
    description: custom activities
  - name: Bored API
    description: Bored API
    externalDocs:
      description: Documentation
      url: https://www.boredapi.com/documentation
paths:
  /activities:
    get:
      tags:
        - Activity
      summary: Find all custom activites
      operationId: findCustomActivities
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BoredActivity'          
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BoredActivity'
    post:
      tags:
        - Activity
      summary: Add a new custom activity
      operationId: addActivity
      requestBody:
        description: Create a new activity
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoredActivity'
          application/xml:
            schema:
              $ref: '#/components/schemas/BoredActivity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BoredActivity'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoredActivity'          
            application/xml:
              schema:
                $ref: '#/components/schemas/BoredActivity'
        '405':
          description: Invalid input
  /activities/{activityKey}:
    get:
      tags:
        - Activity
      summary: Find an activity by its key
      operationId: findActivityByKey
      parameters:
        - name: activityKey
          in: path
          description: key of activity to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BoredActivity'          
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BoredActivity'
        '400':
          description: Invalid key supplied
        '404':
          description: activity not found
    put:
      tags:
        - Activity
      summary: Update an existing activity
      operationId: updateActivity
      parameters:
        - name: activityKey
          in: path
          description: key of activity to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BoredActivity'          
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BoredActivity'
        '405':
          description: Invalid input
    delete:
      tags:
        - Activity
      summary: delete the activity given its key
      operationId: deleteActivity
      parameters:
        - name: activityKey
          in: path
          description: key of activity to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BoredActivity'          
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BoredActivity'
        '400':
          description: Invalid input
  /bored/activity:
    get:
      tags:
        - Bored API
      summary: Finds a random activity
      operationId: findRandomActivity
      parameters:
        - name: key
          in: query
          description: Find an activity by its key
          required: false
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoredActivity'        
            application/xml:
              schema:
                $ref: '#/components/schemas/BoredActivity'
        '404':
          description: Activity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'        
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    BoredActivity:
      type: object
      required:
        - key
        - activity
        - accessibility
        - type
        - participants
        - price
      properties:
        key:
          type: integer
          format: int64
          description: A unique numeric id
          example: 3943506
        activity:
          type: string
          description: Description of the queried activity
          example: Learn Express.js
        accessibility:
          type: string
          description: A factor describing how possible an event is to do with zero being the most accessible
          example: 0.25
        type:
          type: string
          description: Type of the activity
          example: education
          enum:
            - education
            - recreational
            - social
            - diy
            - charity
            - cooking
            - relaxation
            - music
            - busywork
        participants:
          type: integer
          description: The number of people that this activity could involve
          format: int32
          example: 1
        price:
          type: string
          description: A factor describing the cost of the event with zero being free [0, 1]
          example: 0.1
        link:
          type: string
          description: optional link for additional information
          example: https://expressjs.com/
      xml:
        name: boredActivity

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
      xml:
        name: 'errorResponse'
  requestBodies:
    BoredActivity:
      description: BoredActivity object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BoredActivity'
        application/xml:
          schema:
            $ref: '#/components/schemas/BoredActivity'
